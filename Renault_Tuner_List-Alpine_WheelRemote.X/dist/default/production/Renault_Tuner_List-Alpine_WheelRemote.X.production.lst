

Microchip Technology PIC PRO Macro Assembler V1.12 build 49521 
                                                                                               Tue Feb 12 10:20:26 2013

HI-TECH Software Omniscient Code Generator (PRO mode) build 49521
     1                           	processor	16F628
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text228,local,class=CODE,merge=1,delta=2
    12                           	psect	swtext1,local,class=CONST,delta=2
    13                           	psect	text229,local,class=CODE,merge=1,delta=2
    14                           	psect	text230,local,class=CODE,merge=1,delta=2
    15                           	psect	text231,local,class=CODE,merge=1,delta=2
    16                           	psect	text232,local,class=CODE,merge=1,delta=2
    17                           	psect	text233,local,class=CODE,merge=1,delta=2
    18                           	psect	text234,local,class=CODE,merge=1,delta=2
    19                           	psect	text235,local,class=CODE,merge=1,delta=2
    20                           	psect	text236,local,class=CODE,merge=1,delta=2
    21                           	psect	pa_nodes,global,class=CODE,delta=2
    22                           	dabs	1,0x7E,2
    23  0000                     	;# 
    24  0001                     	;# 
    25  0002                     	;# 
    26  0003                     	;# 
    27  0004                     	;# 
    28  0005                     	;# 
    29  0006                     	;# 
    30  000A                     	;# 
    31  000B                     	;# 
    32  000C                     	;# 
    33  000E                     	;# 
    34  000E                     	;# 
    35  000F                     	;# 
    36  0010                     	;# 
    37  0011                     	;# 
    38  0012                     	;# 
    39  0015                     	;# 
    40  0015                     	;# 
    41  0016                     	;# 
    42  0017                     	;# 
    43  0018                     	;# 
    44  0019                     	;# 
    45  001A                     	;# 
    46  001F                     	;# 
    47  0081                     	;# 
    48  0085                     	;# 
    49  0086                     	;# 
    50  008C                     	;# 
    51  008E                     	;# 
    52  0092                     	;# 
    53  0098                     	;# 
    54  0099                     	;# 
    55  009A                     	;# 
    56  009B                     	;# 
    57  009C                     	;# 
    58  009D                     	;# 
    59  009F                     	;# 
    60                           
    61                           	psect	idataBANK0
    62  0000                     __pidataBANK0:	
    63                           
    64                           	psect	strings
    65  0001                     __pstrings:	
    66  0001                     stringtab:	
    67                           ;	global	stringdir,stringtab,__stringbase
    68                           
    69  0001                     __stringtab:	
    70  0001                     stringcode:	
    71                           ;	String table - string pointers are 1 byte each
    72                           
    73  0001                     stringdir:	
    74  0001  3000               	movlw	high stringdir
    75  0002  008A               	movwf	10
    76  0003  0804               	movf	4,w
    77  0004  0A84               	incf	4,f
    78  0005  0782               	addwf	2,f
    79  0006                     __stringbase:	
    80  0006  3400               	retlw	0
    81  0007                     __end_of__stringtab:	
    82  0007                     _alpine_packet:	
    83  0007  3486               	retlw	134
    84  0008  3472               	retlw	114
    85  0009  3414               	retlw	20
    86  000A  34EB               	retlw	235
    87  000B  3486               	retlw	134
    88  000C  3472               	retlw	114
    89  000D  3415               	retlw	21
    90  000E  34EA               	retlw	234
    91  000F  3486               	retlw	134
    92  0010  3472               	retlw	114
    93  0011  3416               	retlw	22
    94  0012  34E9               	retlw	233
    95  0013  3486               	retlw	134
    96  0014  3472               	retlw	114
    97  0015  340E               	retlw	14
    98  0016  34F1               	retlw	241
    99  0017  3486               	retlw	134
   100  0018  3472               	retlw	114
   101  0019  340F               	retlw	15
   102  001A  34F0               	retlw	240
   103  001B  3486               	retlw	134
   104  001C  3472               	retlw	114
   105  001D  340A               	retlw	10
   106  001E  34F5               	retlw	245
   107  001F  3486               	retlw	134
   108  0020  3472               	retlw	114
   109  0021  3412               	retlw	18
   110  0022  34ED               	retlw	237
   111  0023  3486               	retlw	134
   112  0024  3472               	retlw	114
   113  0025  3413               	retlw	19
   114  0026  34EC               	retlw	236
   115  0027  3486               	retlw	134
   116  0028  3472               	retlw	114
   117  0029  3409               	retlw	9
   118  002A  34F6               	retlw	246
   119  002B  3486               	retlw	134
   120  002C  3472               	retlw	114
   121  002D  3407               	retlw	7
   122  002E  34F8               	retlw	248
   123  002F  3486               	retlw	134
   124  0030  3472               	retlw	114
   125  0031  340D               	retlw	13
   126  0032  34F2               	retlw	242
   127  0033                     __end_of_alpine_packet:	
   128  0033                     _key_cmd1:	
   129  0033  3400               	retlw	0
   130  0034  3400               	retlw	0
   131  0035  3400               	retlw	0
   132  0036  340A               	retlw	10
   133  0037  3406               	retlw	6
   134  0038  3407               	retlw	7
   135  0039  3403               	retlw	3
   136  003A  3409               	retlw	9
   137  003B  3404               	retlw	4
   138  003C                     __end_of_key_cmd1:	
   139  003C                     _key_cmd2:	
   140  003C  3401               	retlw	1
   141  003D  3401               	retlw	1
   142  003E  3401               	retlw	1
   143  003F  3405               	retlw	5
   144  0040  3406               	retlw	6
   145  0041  3407               	retlw	7
   146  0042  3403               	retlw	3
   147  0043  3409               	retlw	9
   148  0044  3404               	retlw	4
   149  0045                     __end_of_key_cmd2:	
   150  0045                     _key_mode:	
   151  0045  3402               	retlw	2
   152  0046  3402               	retlw	2
   153  0047  3402               	retlw	2
   154  0048  3401               	retlw	1
   155  0049  3400               	retlw	0
   156  004A  3400               	retlw	0
   157  004B  3400               	retlw	0
   158  004C  3400               	retlw	0
   159  004D  3400               	retlw	0
   160  004E                     __end_of_key_mode:	
   161  004E                     _key_pull_bit:	
   162  004E  3404               	retlw	4
   163  004F  3404               	retlw	4
   164  0050  3404               	retlw	4
   165  0051  3405               	retlw	5
   166  0052  3405               	retlw	5
   167  0053  3405               	retlw	5
   168  0054  3406               	retlw	6
   169  0055  3406               	retlw	6
   170  0056  3406               	retlw	6
   171  0057                     __end_of_key_pull_bit:	
   172  0057                     _key_push_bit:	
   173  0057  3400               	retlw	0
   174  0058  3401               	retlw	1
   175  0059  3402               	retlw	2
   176  005A  3400               	retlw	0
   177  005B  3401               	retlw	1
   178  005C  3402               	retlw	2
   179  005D  3400               	retlw	0
   180  005E  3401               	retlw	1
   181  005F  3402               	retlw	2
   182  0060                     __end_of_key_push_bit:	
   183  000B                     _INTCON	set	11
   184  0005                     _PORTA	set	5
   185  0006                     _PORTB	set	6
   186  0085                     _TRISA	set	133
   187  0086                     _TRISB	set	134
   188  040F                     _nRBPU	set	1039
   189                           
   190                           ; #config settings
   191  0000                     
   192                           	psect	cinit
   193  064C                     start_initialization:	
   194  064C                     __initialization:	
   195                           
   196                           ; Initialize objects allocated to BANK0
   197  064C  1283               	bcf	3,5	;RP0=0, select bank0
   198                           
   199                           ;initializer for main@activeKey
   200  064D  30FF               	movlw	255
   201  064E  00A0               	movwf	__pdataBANK0& (0+127)
   202                           
   203                           ;initializer for process@encLastKey
   204  064F  30FF               	movlw	255
   205  0650  00A1               	movwf	(__pdataBANK0+1)& (0+127)
   206  0651                     end_of_initialization:	
   207                           ;End of C runtime variable initialization code
   208                           
   209  0651                     __end_of__initialization:	
   210  0651  0183               	clrf	3
   211  0652  2F24               	ljmp	_main	;jump to C main() function
   212                           
   213                           	psect	dataBANK0
   214  0020                     __pdataBANK0:	
   215  0020                     main@activeKey:	
   216  0020                     	ds	1
   217  0021                     process@encLastKey:	
   218  0021                     	ds	1
   219                           
   220                           	psect	cstackCOMMON
   221  0070                     __pcstackCOMMON:	
   222  0070                     ?_space:	
   223  0070                     ??_space:	
   224                           ; 0 bytes @ 0x0
   225                           
   226  0070                     ?_mark:	
   227                           ; 0 bytes @ 0x0
   228                           
   229  0070                     ?_sendCmd:	
   230                           ; 0 bytes @ 0x0
   231                           
   232  0070                     ?_repeatCmd:	
   233                           ; 0 bytes @ 0x0
   234                           
   235  0070                     ??_keyPressed:	
   236                           ; 0 bytes @ 0x0
   237                           
   238  0070                     ?_process:	
   239                           ; 0 bytes @ 0x0
   240                           
   241  0070                     ?_repeat:	
   242                           ; 0 bytes @ 0x0
   243                           
   244  0070                     ?_setup:	
   245                           ; 0 bytes @ 0x0
   246                           
   247  0070                     ??_setup:	
   248                           ; 0 bytes @ 0x0
   249                           
   250  0070                     ?_main:	
   251                           ; 0 bytes @ 0x0
   252                           
   253  0070                     ?_keyPressed:	
   254                           ; 0 bytes @ 0x0
   255                           
   256                           
   257                           ; 1 bytes @ 0x0
   258  0070                     	ds	1
   259  0071                     space@ntimes:	
   260  0071                     keyPressed@key_pull_mask:	
   261                           ; 1 bytes @ 0x1
   262                           
   263                           
   264                           ; 1 bytes @ 0x1
   265  0071                     	ds	1
   266  0072                     ??_mark:	
   267  0072                     mark@ntimes:	
   268                           ; 0 bytes @ 0x2
   269                           
   270  0072                     keyPressed@result:	
   271                           ; 1 bytes @ 0x2
   272                           
   273                           
   274                           ; 1 bytes @ 0x2
   275  0072                     	ds	1
   276  0073                     ??_sendCmd:	
   277  0073                     ??_repeatCmd:	
   278                           ; 0 bytes @ 0x3
   279                           
   280  0073                     ??_repeat:	
   281                           ; 0 bytes @ 0x3
   282                           
   283  0073                     keyPressed@key:	
   284                           ; 0 bytes @ 0x3
   285                           
   286                           
   287                           ; 1 bytes @ 0x3
   288  0073                     	ds	1
   289  0074                     keyPressed@key_push_mask:	
   290                           
   291                           ; 1 bytes @ 0x4
   292  0074                     	ds	1
   293  0075                     keyPressed@i:	
   294  0075                     repeat@key:	
   295                           ; 1 bytes @ 0x5
   296                           
   297                           
   298                           ; 1 bytes @ 0x5
   299  0075                     	ds	2
   300  0077                     sendCmd@cmd:	
   301                           
   302                           ; 1 bytes @ 0x7
   303  0077                     	ds	1
   304  0078                     sendCmd@nbyte:	
   305                           
   306                           ; 1 bytes @ 0x8
   307  0078                     	ds	1
   308  0079                     sendCmd@nbit:	
   309                           
   310                           ; 1 bytes @ 0x9
   311  0079                     	ds	1
   312  007A                     ??_process:	
   313                           
   314                           ; 0 bytes @ 0xA
   315  007A                     	ds	2
   316  007C                     process@key:	
   317                           
   318                           ; 1 bytes @ 0xC
   319  007C                     	ds	1
   320  007D                     main@i:	
   321                           
   322                           ; 1 bytes @ 0xD
   323  007D                     	ds	1
   324                           
   325                           	psect	cstackBANK0
   326  0022                     __pcstackBANK0:	
   327  0022                     ??_main:	
   328                           
   329                           ; 0 bytes @ 0x0
   330  0022                     	ds	2
   331                           
   332                           	psect	maintext
   333  0724                     __pmaintext:	
   334 ;;
   335 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   336 ;;
   337 ;; *************** function _main *****************
   338 ;; Defined at:
   339 ;;		line 194 in file "main.c"
   340 ;; Parameters:    Size  Location     Type
   341 ;;		None
   342 ;; Auto vars:     Size  Location     Type
   343 ;;  i               1   13[COMMON] unsigned char 
   344 ;; Return value:  Size  Location     Type
   345 ;;		None               void
   346 ;; Registers used:
   347 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   348 ;; Tracked objects:
   349 ;;		On entry : 17F/0
   350 ;;		On exit  : 0/0
   351 ;;		Unchanged: 0/0
   352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   353 ;;      Params:         0       0       0       0
   354 ;;      Locals:         1       0       0       0
   355 ;;      Temps:          0       2       0       0
   356 ;;      Totals:         1       2       0       0
   357 ;;Total ram usage:        3 bytes
   358 ;; Hardware stack levels required when called:    4
   359 ;; This function calls:
   360 ;;		_setup
   361 ;;		_keyPressed
   362 ;;		_process
   363 ;;		_repeat
   364 ;; This function is called by:
   365 ;;		Startup code after reset
   366 ;; This function uses a non-reentrant model
   367 ;;
   368                           
   369                           
   370                           ;psect for function _main
   371  0724                     _main:	
   372                           
   373                           ;main.c: 196: static uint8_t activeKey = 0xFF;
   374                           ;main.c: 198: setup();
   375                           
   376                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   377  0724  2653               	fcall	_setup
   378  0725  2F49               	goto	l951
   379  0726                     l953:	
   380                           
   381                           ;main.c: 202: for (uint8_t i = 0; i < 9; i++) {
   382  0726  01FD               	clrf	main@i
   383  0727                     l959:	
   384                           
   385                           ;main.c: 203: if (keyPressed(i)) {
   386  0727  087D               	movf	main@i,w
   387  0728  26E1               	fcall	_keyPressed
   388  0729  3A00               	xorlw	0
   389  072A  1903               	skipnz
   390  072B  2F31               	goto	l965
   391                           
   392                           ;main.c: 204: activeKey = i;
   393  072C  087D               	movf	main@i,w
   394  072D  1283               	bcf	3,5	;RP0=0, select bank0
   395  072E  00A0               	movwf	main@activeKey
   396                           
   397                           ;main.c: 205: process(activeKey);
   398  072F  276C               	fcall	_process
   399                           
   400                           ;main.c: 206: break;
   401  0730  2F36               	goto	l969
   402  0731                     l965:	
   403  0731  3009               	movlw	9
   404  0732  0AFD               	incf	main@i,f
   405  0733  027D               	subwf	main@i,w
   406  0734  1C03               	skipc
   407  0735  2F27               	goto	l959
   408  0736                     l969:	
   409                           
   410                           ;main.c: 207: }
   411                           ;main.c: 208: }
   412                           ;main.c: 209: if (activeKey == 0xFF) {
   413  0736  1283               	bcf	3,5	;RP0=0, select bank0
   414  0737  1303               	bcf	3,6	;RP1=0, select bank0
   415  0738  0820               	movf	main@activeKey,w
   416  0739  3AFF               	xorlw	255
   417  073A  1D03               	skipz
   418  073B  2F49               	goto	l951
   419                           
   420                           ;main.c: 210: _delay((unsigned long)((10)*(1000000/4000.0)));
   421  073C  3004               	movlw	4
   422  073D  00A3               	movwf	??_main+1
   423  073E  303D               	movlw	61
   424  073F  00A2               	movwf	??_main
   425  0740                     u577:	
   426  0740  0BA2               	decfsz	??_main,f
   427  0741  2F40               	goto	u577
   428  0742  0BA3               	decfsz	??_main+1,f
   429  0743  2F40               	goto	u577
   430  0744  2F45               	nop2
   431  0745  2F49               	goto	l951
   432  0746                     l975:	
   433                           
   434                           ;main.c: 214: repeat(activeKey);
   435  0746  1283               	bcf	3,5	;RP0=0, select bank0
   436  0747  0820               	movf	main@activeKey,w
   437  0748  268B               	fcall	_repeat
   438  0749                     l951:	
   439                           ;main.c: 215: } else {
   440                           
   441                           
   442                           ;main.c: 201: if (activeKey == 0xFF) {
   443  0749  1283               	bcf	3,5	;RP0=0, select bank0
   444  074A  1303               	bcf	3,6	;RP1=0, select bank0
   445  074B  0820               	movf	main@activeKey,w
   446  074C  3AFF               	xorlw	255
   447  074D  1903               	btfsc	3,2
   448  074E  2F26               	goto	l953
   449                           
   450                           ;main.c: 213: if (keyPressed(activeKey)) {
   451  074F  0820               	movf	main@activeKey,w
   452  0750  26E1               	fcall	_keyPressed
   453  0751  3A00               	xorlw	0
   454  0752  1D03               	btfss	3,2
   455  0753  2F46               	goto	l975
   456                           
   457                           ;main.c: 216: activeKey = 0xFF;
   458  0754  30FF               	movlw	255
   459  0755  1283               	bcf	3,5	;RP0=0, select bank0
   460  0756  00A0               	movwf	main@activeKey
   461                           
   462                           ;main.c: 217: _delay((unsigned long)((255)*(1000000/4000.0)));
   463  0757  3053               	movlw	83
   464  0758  00A3               	movwf	??_main+1
   465  0759  30C9               	movlw	201
   466  075A  00A2               	movwf	??_main
   467  075B                     u587:	
   468  075B  0BA2               	decfsz	??_main,f
   469  075C  2F5B               	goto	u587
   470  075D  0BA3               	decfsz	??_main+1,f
   471  075E  2F5B               	goto	u587
   472  075F  2F60               	nop2
   473                           
   474                           ;main.c: 218: _delay((unsigned long)((245)*(1000000/4000.0)));
   475  0760  3050               	movlw	80
   476  0761  1283               	bcf	3,5	;RP0=0, select bank0
   477  0762  1303               	bcf	3,6	;RP1=0, select bank0
   478  0763  00A3               	movwf	??_main+1
   479  0764  308A               	movlw	138
   480  0765  00A2               	movwf	??_main
   481  0766                     u597:	
   482  0766  0BA2               	decfsz	??_main,f
   483  0767  2F66               	goto	u597
   484  0768  0BA3               	decfsz	??_main+1,f
   485  0769  2F66               	goto	u597
   486  076A  0000               	nop
   487  076B  2F49               	goto	l951
   488  076C                     __end_of_main:	
   489                           
   490                           	psect	text228
   491  076C                     __ptext228:	
   492 ;; *************** function _process *****************
   493 ;; Defined at:
   494 ;;		line 129 in file "main.c"
   495 ;; Parameters:    Size  Location     Type
   496 ;;  key             1    wreg     unsigned char 
   497 ;; Auto vars:     Size  Location     Type
   498 ;;  key             1   12[COMMON] unsigned char 
   499 ;; Return value:  Size  Location     Type
   500 ;;		None               void
   501 ;; Registers used:
   502 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   503 ;; Tracked objects:
   504 ;;		On entry : 60/0
   505 ;;		On exit  : 0/0
   506 ;;		Unchanged: 0/0
   507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   508 ;;      Params:         0       0       0       0
   509 ;;      Locals:         1       0       0       0
   510 ;;      Temps:          2       0       0       0
   511 ;;      Totals:         3       0       0       0
   512 ;;Total ram usage:        3 bytes
   513 ;; Hardware stack levels used:    1
   514 ;; Hardware stack levels required when called:    3
   515 ;; This function calls:
   516 ;;		_sendCmd
   517 ;;		_keyPressed
   518 ;; This function is called by:
   519 ;;		_main
   520 ;; This function uses a non-reentrant model
   521 ;;
   522                           
   523                           
   524                           ;psect for function _process
   525  076C                     _process:	
   526                           
   527                           ; Regs used in _process: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   528                           ;process@key stored from wreg
   529  076C  00FC               	movwf	process@key
   530                           
   531                           ;main.c: 130: switch (key_mode[key]) {
   532  076D  2FE8               	goto	l929
   533  076E                     l879:	
   534                           
   535                           ;main.c: 132: sendCmd(key_cmd1[key]);
   536  076E  087C               	movf	process@key,w
   537  076F  3E2D               	addlw	low (_key_cmd1-__stringbase)
   538  0770  0084               	movwf	4
   539  0771  2001               	fcall	stringdir
   540  0772  26A4               	fcall	_sendCmd
   541                           
   542                           ;main.c: 133: break;
   543  0773  2FF6               	goto	l931
   544  0774                     l881:	
   545                           
   546                           ;main.c: 135: _delay((unsigned long)((255)*(1000000/4000.0)));
   547  0774  3053               	movlw	83
   548  0775  00FB               	movwf	??_process+1
   549  0776  30C9               	movlw	201
   550  0777  00FA               	movwf	??_process
   551  0778                     u607:	
   552  0778  0BFA               	decfsz	??_process,f
   553  0779  2F78               	goto	u607
   554  077A  0BFB               	decfsz	??_process+1,f
   555  077B  2F78               	goto	u607
   556  077C  2F7D               	nop2
   557                           
   558                           ;main.c: 136: _delay((unsigned long)((245)*(1000000/4000.0)));
   559  077D  3050               	movlw	80
   560  077E  00FB               	movwf	??_process+1
   561  077F  308A               	movlw	138
   562  0780  00FA               	movwf	??_process
   563  0781                     u617:	
   564  0781  0BFA               	decfsz	??_process,f
   565  0782  2F81               	goto	u617
   566  0783  0BFB               	decfsz	??_process+1,f
   567  0784  2F81               	goto	u617
   568  0785  0000               	nop
   569                           
   570                           ;main.c: 137: if (keyPressed(key)) {
   571  0786  087C               	movf	process@key,w
   572  0787  26E1               	fcall	_keyPressed
   573  0788  3A00               	xorlw	0
   574  0789  1903               	skipnz
   575  078A  2F91               	goto	l887
   576                           
   577                           ;main.c: 138: sendCmd(key_cmd1[key]);
   578  078B  087C               	movf	process@key,w
   579  078C  3E2D               	addlw	low (_key_cmd1-__stringbase)
   580  078D  0084               	movwf	4
   581  078E  2001               	fcall	stringdir
   582  078F  26A4               	fcall	_sendCmd
   583                           
   584                           ;main.c: 139: } else {
   585  0790  2FF6               	goto	l931
   586  0791                     l887:	
   587                           
   588                           ;main.c: 140: _delay((unsigned long)((255)*(1000000/4000.0)));
   589  0791  3053               	movlw	83
   590  0792  00FB               	movwf	??_process+1
   591  0793  30C9               	movlw	201
   592  0794  00FA               	movwf	??_process
   593  0795                     u627:	
   594  0795  0BFA               	decfsz	??_process,f
   595  0796  2F95               	goto	u627
   596  0797  0BFB               	decfsz	??_process+1,f
   597  0798  2F95               	goto	u627
   598  0799  2F9A               	nop2
   599                           
   600                           ;main.c: 141: _delay((unsigned long)((245)*(1000000/4000.0)));
   601  079A  3050               	movlw	80
   602  079B  00FB               	movwf	??_process+1
   603  079C  308A               	movlw	138
   604  079D  00FA               	movwf	??_process
   605  079E                     u637:	
   606  079E  0BFA               	decfsz	??_process,f
   607  079F  2F9E               	goto	u637
   608  07A0  0BFB               	decfsz	??_process+1,f
   609  07A1  2F9E               	goto	u637
   610  07A2  0000               	nop
   611                           
   612                           ;main.c: 143: if (keyPressed(key)) {
   613  07A3  087C               	movf	process@key,w
   614  07A4  26E1               	fcall	_keyPressed
   615  07A5  3A00               	xorlw	0
   616  07A6  1903               	skipnz
   617  07A7  2FAE               	goto	l893
   618                           
   619                           ;main.c: 144: sendCmd(key_cmd2[key]);
   620  07A8  087C               	movf	process@key,w
   621  07A9  3E36               	addlw	low (_key_cmd2-__stringbase)
   622  07AA  0084               	movwf	4
   623  07AB  2001               	fcall	stringdir
   624  07AC  26A4               	fcall	_sendCmd
   625                           
   626                           ;main.c: 145: } else {
   627  07AD  2FF6               	goto	l931
   628  07AE                     l893:	
   629                           
   630                           ;main.c: 146: sendCmd(key_cmd1[key]);
   631  07AE  087C               	movf	process@key,w
   632  07AF  3E2D               	addlw	low (_key_cmd1-__stringbase)
   633  07B0  0084               	movwf	4
   634  07B1  2001               	fcall	stringdir
   635  07B2  26A4               	fcall	_sendCmd
   636  07B3  2FF6               	goto	l931
   637  07B4                     l895:	
   638                           
   639                           ;main.c: 151: static uint8_t encLastKey = 0xFF;
   640                           ;main.c: 153: if (encLastKey != 0xFF) {
   641  07B4  0821               	movf	process@encLastKey,w
   642  07B5  3AFF               	xorlw	255
   643  07B6  1903               	skipnz
   644  07B7  2FE4               	goto	l925
   645                           
   646                           ;main.c: 154: if ((encLastKey == 0 && key == 1) ||
   647                           ;main.c: 155: (encLastKey == 1 && key == 2) ||
   648                           ;main.c: 156: (encLastKey == 2 && key == 0)) {
   649  07B8  08A1               	movf	process@encLastKey,f
   650  07B9  1903               	btfsc	3,2
   651  07BA  037C               	decf	process@key,w
   652  07BB  1903               	skipnz
   653  07BC  2FCA               	goto	l909
   654  07BD  0B21               	decfsz	process@encLastKey,w
   655  07BE  2FC3               	goto	l905
   656  07BF  087C               	movf	process@key,w
   657  07C0  3A02               	xorlw	2
   658  07C1  1903               	skipnz
   659  07C2  2FCA               	goto	l909
   660  07C3                     l905:	
   661  07C3  0821               	movf	process@encLastKey,w
   662  07C4  3A02               	xorlw	2
   663  07C5  1D03               	skipz
   664  07C6  2FCD               	goto	l911
   665  07C7  08FC               	movf	process@key,f
   666  07C8  1D03               	skipz
   667  07C9  2FCD               	goto	l911
   668  07CA                     l909:	
   669                           
   670                           ;main.c: 157: sendCmd(key_cmd1[key]);
   671  07CA  087C               	movf	process@key,w
   672  07CB  3E2D               	addlw	low (_key_cmd1-__stringbase)
   673  07CC  2FE1               	goto	L1
   674  07CD                     l911:	
   675                           ;main.c: 158: } else if ((encLastKey == 2 && key == 1) ||
   676                           
   677                           
   678                           ;main.c: 159: (encLastKey == 1 && key == 0) ||
   679                           ;main.c: 160: (encLastKey == 0 && key == 2)) {
   680  07CD  0821               	movf	process@encLastKey,w
   681  07CE  3A02               	xorlw	2
   682  07CF  1903               	btfsc	3,2
   683  07D0  037C               	decf	process@key,w
   684  07D1  1903               	skipnz
   685  07D2  2FDF               	goto	l923
   686  07D3  0B21               	decfsz	process@encLastKey,w
   687  07D4  2FD8               	goto	l919
   688  07D5  087C               	movf	process@key,w
   689  07D6  1903               	btfsc	3,2
   690  07D7  2FDF               	goto	l923
   691  07D8                     l919:	
   692  07D8  08A1               	movf	process@encLastKey,f
   693  07D9  1D03               	skipz
   694  07DA  2FE4               	goto	l925
   695  07DB  087C               	movf	process@key,w
   696  07DC  3A02               	xorlw	2
   697  07DD  1D03               	skipz
   698  07DE  2FE4               	goto	l925
   699  07DF                     l923:	
   700                           
   701                           ;main.c: 161: sendCmd(key_cmd2[key]);
   702  07DF  087C               	movf	process@key,w
   703  07E0  3E36               	addlw	low (_key_cmd2-__stringbase)
   704  07E1                     L1:	
   705  07E1  0084               	movwf	4
   706  07E2  2001               	fcall	stringdir
   707  07E3  26A4               	fcall	_sendCmd
   708  07E4                     l925:	
   709                           
   710                           ;main.c: 162: }
   711                           ;main.c: 163: }
   712                           ;main.c: 164: encLastKey = key;
   713  07E4  087C               	movf	process@key,w
   714  07E5  1283               	bcf	3,5	;RP0=0, select bank0
   715  07E6  00A1               	movwf	process@encLastKey
   716                           
   717                           ;main.c: 165: break;
   718  07E7  2FF6               	goto	l931
   719  07E8                     l929:	
   720  07E8  087C               	movf	process@key,w
   721  07E9  3E3F               	addlw	low (_key_mode-__stringbase)
   722  07EA  0084               	movwf	4
   723  07EB  2001               	fcall	stringdir
   724                           
   725                           ; Switch size 1, requested type "speed"
   726                           ; Number of cases is 3, Range of values is 0 to 2
   727                           ; switch strategies available:
   728                           ; Name         Instructions Cycles
   729                           ; direct_byte            9     6 (fixed)
   730                           ; simple_byte           10     6 (average)
   731                           ; jumptable            260     6 (fixed)
   732                           ; rangetable             7     6 (fixed)
   733                           ; spacedrange           12     9 (fixed)
   734                           ; locatedrange           3     3 (fixed)
   735                           ;	Chosen strategy is direct_byte
   736  07EC  0084               	movwf	4
   737  07ED  3003               	movlw	3
   738  07EE  0204               	subwf	4,w
   739  07EF  1803               	skipnc
   740  07F0  2FF6               	goto	l931
   741  07F1  3000               	movlw	high S999
   742  07F2  008A               	movwf	10
   743  07F3  3060               	movlw	low S999
   744  07F4  0704               	addwf	4,w
   745  07F5  0082               	movwf	2
   746  07F6                     l931:	
   747                           
   748                           ;main.c: 168: _delay((unsigned long)((41)*(1000000/4000.0)));
   749  07F6  300E               	movlw	14
   750  07F7  00FB               	movwf	??_process+1
   751  07F8  304E               	movlw	78
   752  07F9  00FA               	movwf	??_process
   753  07FA                     u647:	
   754  07FA  0BFA               	decfsz	??_process,f
   755  07FB  2FFA               	goto	u647
   756  07FC  0BFB               	decfsz	??_process+1,f
   757  07FD  2FFA               	goto	u647
   758  07FE  0000               	nop
   759  07FF  0008               	return
   760  0800                     __end_of_process:	
   761                           
   762                           	psect	swtext1
   763  0060                     __pswtext1:	
   764  0060                     S999:	
   765  0060  2F6E               	ljmp	l879
   766  0061  2F74               	ljmp	l881
   767  0062  2FB4               	ljmp	l895
   768                           
   769                           	psect	text229
   770  06A4                     __ptext229:	
   771 ;; *************** function _sendCmd *****************
   772 ;; Defined at:
   773 ;;		line 80 in file "main.c"
   774 ;; Parameters:    Size  Location     Type
   775 ;;  cmd             1    wreg     unsigned char 
   776 ;; Auto vars:     Size  Location     Type
   777 ;;  cmd             1    7[COMMON] unsigned char 
   778 ;;  nbit            1    9[COMMON] char 
   779 ;;  nbyte           1    8[COMMON] char 
   780 ;; Return value:  Size  Location     Type
   781 ;;		None               void
   782 ;; Registers used:
   783 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   784 ;; Tracked objects:
   785 ;;		On entry : 40/0
   786 ;;		On exit  : 60/20
   787 ;;		Unchanged: 0/0
   788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   789 ;;      Params:         0       0       0       0
   790 ;;      Locals:         3       0       0       0
   791 ;;      Temps:          4       0       0       0
   792 ;;      Totals:         7       0       0       0
   793 ;;Total ram usage:        7 bytes
   794 ;; Hardware stack levels used:    1
   795 ;; Hardware stack levels required when called:    2
   796 ;; This function calls:
   797 ;;		_mark
   798 ;;		_space
   799 ;; This function is called by:
   800 ;;		_process
   801 ;; This function uses a non-reentrant model
   802 ;;
   803                           
   804                           
   805                           ;psect for function _sendCmd
   806  06A4                     _sendCmd:	
   807                           
   808                           ; Regs used in _sendCmd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   809                           ;sendCmd@cmd stored from wreg
   810  06A4  00F7               	movwf	sendCmd@cmd
   811                           
   812                           ;main.c: 81: TRISA ^= 0x2;
   813  06A5  3002               	movlw	2
   814  06A6  1683               	bsf	3,5	;RP0=1, select bank1
   815  06A7  0685               	xorwf	5,f	;volatile
   816                           
   817                           ;main.c: 82: mark(16);
   818  06A8  3010               	movlw	16
   819  06A9  265E               	fcall	_mark
   820                           
   821                           ;main.c: 83: space(8);
   822  06AA  3008               	movlw	8
   823  06AB  2676               	fcall	_space
   824                           
   825                           ;main.c: 85: for (int8_t nbyte = 0; nbyte < 4; nbyte++) {
   826  06AC  01F8               	clrf	sendCmd@nbyte
   827  06AD                     l841:	
   828                           
   829                           ;main.c: 86: for (int8_t nbit = 0; nbit < 8; nbit++) {
   830  06AD  01F9               	clrf	sendCmd@nbit
   831  06AE                     l847:	
   832                           
   833                           ;main.c: 87: mark(1);
   834  06AE  3001               	movlw	1
   835  06AF  265E               	fcall	_mark
   836                           
   837                           ;main.c: 88: if (alpine_packet[cmd][nbyte] & (1 << nbit)) {
   838  06B0  0877               	movf	sendCmd@cmd,w
   839  06B1  00F3               	movwf	??_sendCmd
   840  06B2  3001               	movlw	(_alpine_packet-__stringbase)& (0+255)
   841  06B3  1003               	clrc
   842  06B4  0DF3               	rlf	??_sendCmd,f
   843  06B5  1003               	clrc
   844  06B6  0DF3               	rlf	??_sendCmd,f
   845  06B7  0773               	addwf	??_sendCmd,w
   846  06B8  00F4               	movwf	??_sendCmd+1
   847  06B9  0878               	movf	sendCmd@nbyte,w
   848  06BA  0774               	addwf	??_sendCmd+1,w
   849  06BB  0084               	movwf	4
   850  06BC  2001               	fcall	stringdir
   851  06BD  00F5               	movwf	??_sendCmd+2
   852  06BE  3001               	movlw	1
   853  06BF  00F6               	movwf	??_sendCmd+3
   854  06C0  0A79               	incf	sendCmd@nbit,w
   855  06C1  2EC4               	goto	u334
   856  06C2                     u335:	
   857  06C2  1003               	clrc
   858  06C3  0DF6               	rlf	??_sendCmd+3,f
   859  06C4                     u334:	
   860  06C4  3EFF               	addlw	-1
   861  06C5  1D03               	skipz
   862  06C6  2EC2               	goto	u335
   863  06C7  0876               	movf	??_sendCmd+3,w
   864  06C8  0575               	andwf	??_sendCmd+2,w
   865  06C9  1903               	btfsc	3,2
   866  06CA  2ECD               	goto	l853
   867                           
   868                           ;main.c: 89: space(3);
   869  06CB  3003               	movlw	3
   870  06CC  2ECE               	goto	L2
   871  06CD                     l853:	
   872                           ;main.c: 90: } else {
   873                           
   874                           
   875                           ;main.c: 91: space(1);
   876  06CD  3001               	movlw	1
   877  06CE                     L2:	
   878  06CE  2676               	fcall	_space
   879  06CF  0AF9               	incf	sendCmd@nbit,f
   880  06D0  0879               	movf	sendCmd@nbit,w
   881  06D1  3A80               	xorlw	128
   882  06D2  3E78               	addlw	-136
   883  06D3  1C03               	skipc
   884  06D4  2EAE               	goto	l847
   885  06D5  0AF8               	incf	sendCmd@nbyte,f
   886  06D6  0878               	movf	sendCmd@nbyte,w
   887  06D7  3A80               	xorlw	128
   888  06D8  3E7C               	addlw	-132
   889  06D9  1C03               	skipc
   890  06DA  2EAD               	goto	l841
   891                           
   892                           ;main.c: 92: }
   893                           ;main.c: 93: }
   894                           ;main.c: 94: }
   895                           ;main.c: 95: mark(1);
   896  06DB  3001               	movlw	1
   897  06DC  265E               	fcall	_mark
   898                           
   899                           ;main.c: 96: TRISA ^= 0x2;
   900  06DD  3002               	movlw	2
   901  06DE  1683               	bsf	3,5	;RP0=1, select bank1
   902  06DF  0685               	xorwf	5,f	;volatile
   903  06E0  0008               	return
   904  06E1                     __end_of_sendCmd:	
   905                           
   906                           	psect	text230
   907  06E1                     __ptext230:	
   908 ;; *************** function _keyPressed *****************
   909 ;; Defined at:
   910 ;;		line 109 in file "main.c"
   911 ;; Parameters:    Size  Location     Type
   912 ;;  key             1    wreg     unsigned char 
   913 ;; Auto vars:     Size  Location     Type
   914 ;;  key             1    3[COMMON] unsigned char 
   915 ;;  i               1    5[COMMON] unsigned char 
   916 ;;  key_push_mas    1    4[COMMON] unsigned char 
   917 ;;  result          1    2[COMMON] unsigned char 
   918 ;;  key_pull_mas    1    1[COMMON] unsigned char 
   919 ;; Return value:  Size  Location     Type
   920 ;;                  1    wreg      unsigned char 
   921 ;; Registers used:
   922 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   923 ;; Tracked objects:
   924 ;;		On entry : 0/0
   925 ;;		On exit  : 60/20
   926 ;;		Unchanged: 0/0
   927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   928 ;;      Params:         0       0       0       0
   929 ;;      Locals:         5       0       0       0
   930 ;;      Temps:          1       0       0       0
   931 ;;      Totals:         6       0       0       0
   932 ;;Total ram usage:        6 bytes
   933 ;; Hardware stack levels used:    2
   934 ;; This function calls:
   935 ;;		Nothing
   936 ;; This function is called by:
   937 ;;		_process
   938 ;;		_main
   939 ;; This function uses a non-reentrant model
   940 ;;
   941                           
   942                           
   943                           ;psect for function _keyPressed
   944  06E1                     _keyPressed:	
   945                           
   946                           ; Regs used in _keyPressed: [wreg-fsr0h+status,2+status,0+pclath]
   947                           ;keyPressed@key stored from wreg
   948  06E1  00F3               	movwf	keyPressed@key
   949                           
   950                           ;main.c: 110: uint8_t key_push_mask = 1 << key_push_bit[key];
   951  06E2  3001               	movlw	1
   952  06E3  00F0               	movwf	??_keyPressed
   953  06E4  0873               	movf	keyPressed@key,w
   954  06E5  3E51               	addlw	low (_key_push_bit-__stringbase)
   955  06E6  0084               	movwf	4
   956  06E7  2001               	fcall	stringdir
   957  06E8  3E01               	addlw	1
   958  06E9  2EEC               	goto	u304
   959  06EA                     u305:	
   960  06EA  1003               	clrc
   961  06EB  0DF0               	rlf	??_keyPressed,f
   962  06EC                     u304:	
   963  06EC  3EFF               	addlw	-1
   964  06ED  1D03               	skipz
   965  06EE  2EEA               	goto	u305
   966  06EF  0870               	movf	??_keyPressed,w
   967  06F0  00F4               	movwf	keyPressed@key_push_mask
   968                           
   969                           ;main.c: 111: uint8_t key_pull_mask = 1 << key_pull_bit[key];
   970  06F1  3001               	movlw	1
   971  06F2  00F0               	movwf	??_keyPressed
   972  06F3  0873               	movf	keyPressed@key,w
   973  06F4  3E48               	addlw	low (_key_pull_bit-__stringbase)
   974  06F5  0084               	movwf	4
   975  06F6  2001               	fcall	stringdir
   976  06F7  3E01               	addlw	1
   977  06F8  2EFB               	goto	u314
   978  06F9                     u315:	
   979  06F9  1003               	clrc
   980  06FA  0DF0               	rlf	??_keyPressed,f
   981  06FB                     u314:	
   982  06FB  3EFF               	addlw	-1
   983  06FC  1D03               	skipz
   984  06FD  2EF9               	goto	u315
   985  06FE  0870               	movf	??_keyPressed,w
   986  06FF  00F1               	movwf	keyPressed@key_pull_mask
   987                           
   988                           ;main.c: 113: PORTB = 0x0;
   989  0700  1283               	bcf	3,5	;RP0=0, select bank0
   990  0701  1303               	bcf	3,6	;RP1=0, select bank0
   991  0702  0186               	clrf	6	;volatile
   992                           
   993                           ;main.c: 114: TRISB = 0xFF ^ key_push_mask;
   994  0703  0974               	comf	keyPressed@key_push_mask,w
   995  0704  1683               	bsf	3,5	;RP0=1, select bank1
   996  0705  0086               	movwf	6	;volatile
   997                           
   998                           ;main.c: 115: _nop();
   999  0706  0000               	nop
  1000                           
  1001                           ;main.c: 117: uint8_t result = 0xFF;
  1002  0707  30FF               	movlw	255
  1003  0708  00F2               	movwf	keyPressed@result
  1004                           
  1005                           ;main.c: 119: for (uint8_t i = 0; i < 4; i++) {
  1006  0709  01F5               	clrf	keyPressed@i
  1007  070A                     l813:	
  1008                           
  1009                           ;main.c: 120: result &= PORTB & key_pull_mask;
  1010  070A  1283               	bcf	3,5	;RP0=0, select bank0
  1011  070B  1303               	bcf	3,6	;RP1=0, select bank0
  1012  070C  0806               	movf	6,w	;volatile
  1013  070D  0571               	andwf	keyPressed@key_pull_mask,w
  1014  070E  05F2               	andwf	keyPressed@result,f
  1015                           
  1016                           ;main.c: 121: _delay((unsigned long)((5)*(1000000/4000.0)));
  1017  070F  30F9               	movlw	249
  1018  0710  00F0               	movwf	??_keyPressed
  1019  0711                     u657:	
  1020  0711  2F12               	nop2
  1021  0712  0BF0               	decfsz	??_keyPressed,f
  1022  0713  2F11               	goto	u657
  1023  0714  2F15               	nop2	;nop
  1024  0715  2F16               	nop2	;nop
  1025  0716  3004               	movlw	4
  1026  0717  0AF5               	incf	keyPressed@i,f
  1027  0718  0275               	subwf	keyPressed@i,w
  1028  0719  1C03               	skipc
  1029  071A  2F0A               	goto	l813
  1030                           
  1031                           ;main.c: 122: }
  1032                           ;main.c: 124: TRISB ^= key_push_mask;
  1033  071B  0874               	movf	keyPressed@key_push_mask,w
  1034  071C  1683               	bsf	3,5	;RP0=1, select bank1
  1035  071D  1303               	bcf	3,6	;RP1=0, select bank1
  1036  071E  0686               	xorwf	6,f	;volatile
  1037                           
  1038                           ;main.c: 125: return (result) ? 1 : 0;
  1039  071F  3000               	movlw	0
  1040  0720  08F2               	movf	keyPressed@result,f
  1041  0721  1D03               	skipz
  1042  0722  3001               	movlw	1
  1043  0723  0008               	return
  1044  0724                     __end_of_keyPressed:	
  1045                           
  1046                           	psect	text231
  1047  068B                     __ptext231:	
  1048 ;; *************** function _repeat *****************
  1049 ;; Defined at:
  1050 ;;		line 172 in file "main.c"
  1051 ;; Parameters:    Size  Location     Type
  1052 ;;  key             1    wreg     unsigned char 
  1053 ;; Auto vars:     Size  Location     Type
  1054 ;;  key             1    5[COMMON] unsigned char 
  1055 ;; Return value:  Size  Location     Type
  1056 ;;		None               void
  1057 ;; Registers used:
  1058 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1059 ;; Tracked objects:
  1060 ;;		On entry : 60/0
  1061 ;;		On exit  : 0/0
  1062 ;;		Unchanged: 0/0
  1063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1064 ;;      Params:         0       0       0       0
  1065 ;;      Locals:         1       0       0       0
  1066 ;;      Temps:          2       0       0       0
  1067 ;;      Totals:         3       0       0       0
  1068 ;;Total ram usage:        3 bytes
  1069 ;; Hardware stack levels used:    1
  1070 ;; Hardware stack levels required when called:    3
  1071 ;; This function calls:
  1072 ;;		_repeatCmd
  1073 ;; This function is called by:
  1074 ;;		_main
  1075 ;; This function uses a non-reentrant model
  1076 ;;
  1077                           
  1078                           
  1079                           ;psect for function _repeat
  1080  068B                     _repeat:	
  1081                           
  1082                           ; Regs used in _repeat: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1083                           ;repeat@key stored from wreg
  1084  068B  00F5               	movwf	repeat@key
  1085                           
  1086                           ;main.c: 173: switch (key_mode[key]) {
  1087  068C  2E8F               	goto	l945
  1088  068D                     l939:	
  1089                           
  1090                           ;main.c: 175: repeatCmd();
  1091  068D  2669               	fcall	_repeatCmd
  1092                           
  1093                           ;main.c: 176: break;
  1094  068E  2E9A               	goto	l947
  1095  068F                     l945:	
  1096  068F  0875               	movf	repeat@key,w
  1097  0690  3E3F               	addlw	low (_key_mode-__stringbase)
  1098  0691  0084               	movwf	4
  1099  0692  2001               	fcall	stringdir
  1100                           
  1101                           ; Switch size 1, requested type "speed"
  1102                           ; Number of cases is 2, Range of values is 0 to 1
  1103                           ; switch strategies available:
  1104                           ; Name         Instructions Cycles
  1105                           ; simple_byte            7     4 (average)
  1106                           ; direct_byte            8     6 (fixed)
  1107                           ; jumptable            260     6 (fixed)
  1108                           ; rangetable             6     6 (fixed)
  1109                           ; spacedrange           10     9 (fixed)
  1110                           ; locatedrange           2     3 (fixed)
  1111                           ;	Chosen strategy is simple_byte
  1112  0693  3A00               	xorlw	0	; case 0
  1113  0694  1903               	skipnz
  1114  0695  2E8D               	goto	l939
  1115  0696  3A01               	xorlw	1	; case 1
  1116  0697  1903               	skipnz
  1117  0698  2E8D               	goto	l939
  1118  0699  2E9A               	goto	l947
  1119  069A                     l947:	
  1120                           
  1121                           ;main.c: 181: _delay((unsigned long)((41)*(1000000/4000.0)));
  1122  069A  300E               	movlw	14
  1123  069B  00F4               	movwf	??_repeat+1
  1124  069C  304E               	movlw	78
  1125  069D  00F3               	movwf	??_repeat
  1126  069E                     u667:	
  1127  069E  0BF3               	decfsz	??_repeat,f
  1128  069F  2E9E               	goto	u667
  1129  06A0  0BF4               	decfsz	??_repeat+1,f
  1130  06A1  2E9E               	goto	u667
  1131  06A2  0000               	nop
  1132  06A3  0008               	return
  1133  06A4                     __end_of_repeat:	
  1134                           
  1135                           	psect	text232
  1136  0669                     __ptext232:	
  1137 ;; *************** function _repeatCmd *****************
  1138 ;; Defined at:
  1139 ;;		line 100 in file "main.c"
  1140 ;; Parameters:    Size  Location     Type
  1141 ;;		None
  1142 ;; Auto vars:     Size  Location     Type
  1143 ;;		None
  1144 ;; Return value:  Size  Location     Type
  1145 ;;		None               void
  1146 ;; Registers used:
  1147 ;;		wreg, status,2, status,0, pclath, cstack
  1148 ;; Tracked objects:
  1149 ;;		On entry : 60/0
  1150 ;;		On exit  : 60/20
  1151 ;;		Unchanged: 0/0
  1152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1153 ;;      Params:         0       0       0       0
  1154 ;;      Locals:         0       0       0       0
  1155 ;;      Temps:          0       0       0       0
  1156 ;;      Totals:         0       0       0       0
  1157 ;;Total ram usage:        0 bytes
  1158 ;; Hardware stack levels used:    1
  1159 ;; Hardware stack levels required when called:    2
  1160 ;; This function calls:
  1161 ;;		_mark
  1162 ;;		_space
  1163 ;; This function is called by:
  1164 ;;		_repeat
  1165 ;; This function uses a non-reentrant model
  1166 ;;
  1167                           
  1168                           
  1169                           ;psect for function _repeatCmd
  1170  0669                     _repeatCmd:	
  1171                           
  1172                           ;main.c: 101: TRISA ^= 0x2;
  1173                           
  1174                           ; Regs used in _repeatCmd: [wreg+status,2+status,0+pclath+cstack]
  1175  0669  3002               	movlw	2
  1176  066A  1683               	bsf	3,5	;RP0=1, select bank1
  1177  066B  0685               	xorwf	5,f	;volatile
  1178                           
  1179                           ;main.c: 102: mark(16);
  1180  066C  3010               	movlw	16
  1181  066D  265E               	fcall	_mark
  1182                           
  1183                           ;main.c: 103: space(4);
  1184  066E  3004               	movlw	4
  1185  066F  2676               	fcall	_space
  1186                           
  1187                           ;main.c: 104: mark(1);
  1188  0670  3001               	movlw	1
  1189  0671  265E               	fcall	_mark
  1190                           
  1191                           ;main.c: 105: TRISA ^= 0x2;
  1192  0672  3002               	movlw	2
  1193  0673  1683               	bsf	3,5	;RP0=1, select bank1
  1194  0674  0685               	xorwf	5,f	;volatile
  1195  0675  0008               	return
  1196  0676                     __end_of_repeatCmd:	
  1197                           
  1198                           	psect	text233
  1199  065E                     __ptext233:	
  1200 ;; *************** function _mark *****************
  1201 ;; Defined at:
  1202 ;;		line 73 in file "main.c"
  1203 ;; Parameters:    Size  Location     Type
  1204 ;;  ntimes          1    wreg     unsigned char 
  1205 ;; Auto vars:     Size  Location     Type
  1206 ;;  ntimes          1    2[COMMON] unsigned char 
  1207 ;; Return value:  Size  Location     Type
  1208 ;;		None               void
  1209 ;; Registers used:
  1210 ;;		wreg, status,2, status,0, pclath, cstack
  1211 ;; Tracked objects:
  1212 ;;		On entry : 0/20
  1213 ;;		On exit  : 60/0
  1214 ;;		Unchanged: 0/0
  1215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1216 ;;      Params:         0       0       0       0
  1217 ;;      Locals:         1       0       0       0
  1218 ;;      Temps:          0       0       0       0
  1219 ;;      Totals:         1       0       0       0
  1220 ;;Total ram usage:        1 bytes
  1221 ;; Hardware stack levels used:    1
  1222 ;; Hardware stack levels required when called:    1
  1223 ;; This function calls:
  1224 ;;		_space
  1225 ;; This function is called by:
  1226 ;;		_sendCmd
  1227 ;;		_repeatCmd
  1228 ;; This function uses a non-reentrant model
  1229 ;;
  1230                           
  1231                           
  1232                           ;psect for function _mark
  1233  065E                     _mark:	
  1234                           
  1235                           ; Regs used in _mark: [wreg+status,2+status,0+pclath+cstack]
  1236                           ;mark@ntimes stored from wreg
  1237  065E  00F2               	movwf	mark@ntimes
  1238                           
  1239                           ;main.c: 74: PORTA |= 0x2;
  1240  065F  1283               	bcf	3,5	;RP0=0, select bank0
  1241  0660  1303               	bcf	3,6	;RP1=0, select bank0
  1242  0661  1485               	bsf	5,1	;volatile
  1243                           
  1244                           ;main.c: 75: space(ntimes);
  1245  0662  0872               	movf	mark@ntimes,w
  1246  0663  2676               	fcall	_space
  1247                           
  1248                           ;main.c: 76: PORTA ^= 0x2;
  1249  0664  3002               	movlw	2
  1250  0665  1283               	bcf	3,5	;RP0=0, select bank0
  1251  0666  1303               	bcf	3,6	;RP1=0, select bank0
  1252  0667  0685               	xorwf	5,f	;volatile
  1253  0668  0008               	return
  1254  0669                     __end_of_mark:	
  1255                           
  1256                           	psect	text234
  1257  0676                     __ptext234:	
  1258 ;; *************** function _space *****************
  1259 ;; Defined at:
  1260 ;;		line 64 in file "main.c"
  1261 ;; Parameters:    Size  Location     Type
  1262 ;;  ntimes          1    wreg     unsigned char 
  1263 ;; Auto vars:     Size  Location     Type
  1264 ;;  ntimes          1    1[COMMON] unsigned char 
  1265 ;; Return value:  Size  Location     Type
  1266 ;;		None               void
  1267 ;; Registers used:
  1268 ;;		wreg, status,2, status,0
  1269 ;; Tracked objects:
  1270 ;;		On entry : 60/0
  1271 ;;		On exit  : 0/0
  1272 ;;		Unchanged: 0/0
  1273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1274 ;;      Params:         0       0       0       0
  1275 ;;      Locals:         1       0       0       0
  1276 ;;      Temps:          1       0       0       0
  1277 ;;      Totals:         2       0       0       0
  1278 ;;Total ram usage:        2 bytes
  1279 ;; Hardware stack levels used:    1
  1280 ;; This function calls:
  1281 ;;		Nothing
  1282 ;; This function is called by:
  1283 ;;		_mark
  1284 ;;		_sendCmd
  1285 ;;		_repeatCmd
  1286 ;; This function uses a non-reentrant model
  1287 ;;
  1288                           
  1289                           
  1290                           ;psect for function _space
  1291  0676                     _space:	
  1292                           
  1293                           ; Regs used in _space: [wreg+status,2+status,0]
  1294                           ;space@ntimes stored from wreg
  1295  0676  00F1               	movwf	space@ntimes
  1296  0677                     l795:	
  1297                           ;main.c: 65: while (ntimes--) {
  1298                           
  1299  0677  03F1               	decf	space@ntimes,f
  1300  0678  0871               	movf	space@ntimes,w
  1301  0679  3AFF               	xorlw	255
  1302  067A  1903               	btfsc	3,2
  1303  067B  0008               	return
  1304                           
  1305                           ;main.c: 66: _delay((unsigned long)((255)*(1000000/4000000.0)));
  1306  067C  3014               	movlw	20
  1307  067D  00F0               	movwf	??_space
  1308  067E                     u677:	
  1309  067E  0BF0               	decfsz	??_space,f
  1310  067F  2E7E               	goto	u677
  1311  0680  2E81               	nop2	;nop
  1312                           
  1313                           ;main.c: 67: _delay((unsigned long)((255)*(1000000/4000000.0)));
  1314  0681  3014               	movlw	20
  1315  0682  00F0               	movwf	??_space
  1316  0683                     u687:	
  1317  0683  0BF0               	decfsz	??_space,f
  1318  0684  2E83               	goto	u687
  1319  0685  2E86               	nop2	;nop
  1320                           
  1321                           ;main.c: 68: _delay((unsigned long)((52)*(1000000/4000000.0)));
  1322  0686  3004               	movlw	4
  1323  0687  00F0               	movwf	??_space
  1324  0688                     u697:	
  1325  0688  0BF0               	decfsz	??_space,f
  1326  0689  2E88               	goto	u697
  1327  068A  2E77               	goto	l795
  1328  068B                     __end_of_space:	
  1329                           
  1330                           	psect	text235
  1331  0653                     __ptext235:	
  1332 ;; *************** function _setup *****************
  1333 ;; Defined at:
  1334 ;;		line 184 in file "main.c"
  1335 ;; Parameters:    Size  Location     Type
  1336 ;;		None
  1337 ;; Auto vars:     Size  Location     Type
  1338 ;;		None
  1339 ;; Return value:  Size  Location     Type
  1340 ;;		None               void
  1341 ;; Registers used:
  1342 ;;		wreg, status,2
  1343 ;; Tracked objects:
  1344 ;;		On entry : 17F/0
  1345 ;;		On exit  : 17F/20
  1346 ;;		Unchanged: FFE80/0
  1347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1348 ;;      Params:         0       0       0       0
  1349 ;;      Locals:         0       0       0       0
  1350 ;;      Temps:          0       0       0       0
  1351 ;;      Totals:         0       0       0       0
  1352 ;;Total ram usage:        0 bytes
  1353 ;; Hardware stack levels used:    1
  1354 ;; This function calls:
  1355 ;;		Nothing
  1356 ;; This function is called by:
  1357 ;;		_main
  1358 ;; This function uses a non-reentrant model
  1359 ;;
  1360                           
  1361                           
  1362                           ;psect for function _setup
  1363  0653                     _setup:	
  1364                           
  1365                           ;main.c: 186: INTCON = 0x0;
  1366                           
  1367                           ; Regs used in _setup: [wreg+status,2]
  1368  0653  018B               	clrf	11	;volatile
  1369                           
  1370                           ;main.c: 187: TRISA = 0xFF;
  1371  0654  30FF               	movlw	255
  1372  0655  1683               	bsf	3,5	;RP0=1, select bank1
  1373  0656  0085               	movwf	5	;volatile
  1374                           
  1375                           ;main.c: 188: TRISB = 0xFF;
  1376  0657  0086               	movwf	6	;volatile
  1377                           
  1378                           ;main.c: 189: PORTA = 0x0;
  1379  0658  1283               	bcf	3,5	;RP0=0, select bank0
  1380  0659  0185               	clrf	5	;volatile
  1381                           
  1382                           ;main.c: 190: PORTB = 0x0;
  1383  065A  0186               	clrf	6	;volatile
  1384                           
  1385                           ;main.c: 191: nRBPU = 0x0;
  1386  065B  1683               	bsf	3,5	;RP0=1, select bank1
  1387  065C  1381               	bcf	1,7	;volatile
  1388  065D  0008               	return
  1389  065E                     __end_of_setup:	
  1390                           
  1391                           	psect	text236
  1392  0000                     __ptext236:	
  1393                           
  1394                           ;psect for function _setup
  1395  007E                     btemp	set	126	;btemp
  1396  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    89
    Data        2
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      2       4
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_process
    _process->_sendCmd
    _sendCmd->_mark
    _repeatCmd->_mark
    _mark->_space

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1118
                                             13 COMMON     1     1      0
                                              0 BANK0      2     2      0
                              _setup
                         _keyPressed
                            _process
                             _repeat
 ---------------------------------------------------------------------------------
 (1) _process                                              3     3      0     758
                                             10 COMMON     3     3      0
                            _sendCmd
                         _keyPressed
 ---------------------------------------------------------------------------------
 (2) _sendCmd                                              7     7      0     224
                                              3 COMMON     7     7      0
                               _mark
                              _space
 ---------------------------------------------------------------------------------
 (3) _keyPressed                                           6     6      0     182
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (1) _repeat                                               3     3      0      88
                                              3 COMMON     3     3      0
                          _repeatCmd
 ---------------------------------------------------------------------------------
 (2) _repeatCmd                                            0     0      0      66
                               _mark
                              _space
 ---------------------------------------------------------------------------------
 (3) _mark                                                 1     1      0      44
                                              2 COMMON     1     1      0
                              _space
 ---------------------------------------------------------------------------------
 (3) _space                                                2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
   _keyPressed
   _process
     _sendCmd
       _mark
         _space
       _space
     _keyPressed
   _repeat
     _repeatCmd
       _mark
         _space
       _space

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               30      0       0       9        0.0%
BITBANK2            30      0       0       8        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      2       4       3        5.0%
BITBANK0            50      0       0       5        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      16      10        0.0%
ABS                  0      0      12       4        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       4       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.12 build 49521 
Symbol Table                                                                                   Tue Feb 12 10:20:26 2013

                      pc 0002              __CFG_CP$OFF 0000                       fsr 0004  
                    S999 0060                      l813 070A                      l911 07CD  
                    l841 06AD                      l905 07C3                      l923 07DF  
                    l931 07F6                      l853 06CD                      l909 07CA  
                    l925 07E4                      l847 06AE                      l919 07D8  
                    l951 0749                      l945 068F                      l881 0774  
                    l929 07E8                      l953 0726                      l795 0677  
                    l947 069A                      l939 068D                      l893 07AE  
                    l965 0731                      l895 07B4                      l887 0791  
                    l879 076E                      l975 0746                      l959 0727  
                    l969 0736                      u304 06EC                      u305 06EA  
                    u314 06FB                      u315 06F9                      u334 06C4  
                    u335 06C2             __CFG_CPD$OFF 0000                      u607 0778  
                    u617 0781                      u627 0795                      u637 079E  
                    u647 07FA                      u657 0711                      u577 0740  
                    u667 069E                      u587 075B                      u677 067E  
                    u597 0766                      u687 0683                      u697 0688  
                    fsr0 0004             __CFG_FOSC$XT 0000             __CFG_LVP$OFF 0000  
                   _main 0724                     _mark 065E                     btemp 007E  
                   start 0000                    ?_main 0070                    ?_mark 0070  
          __CFG_WDTE$OFF 0000                    _PORTA 0005                    _PORTB 0006  
                  _TRISA 0085                    _TRISB 0086            __CFG_PWRTE$ON 0000  
                  _nRBPU 040F                    _space 0676                    _setup 0653  
        __end_of_sendCmd 06E1                    main@i 007D           __CFG_BOREN$OFF 0000  
                  pclath 000A          __end_of_process 0800         keyPressed@result 0072  
                  status 0003                    wtemp0 007E           __CFG_MCLRE$OFF 0000  
        __initialization 064C             __end_of_main 076C             __end_of_mark 0669  
          main@activeKey 0020                   ??_main 0022                   ??_mark 0072  
            keyPressed@i 0075                   ?_space 0070                   ?_setup 0070  
                 _INTCON 000B         __end_of_key_cmd1 003C         __end_of_key_cmd2 0045  
       __end_of_key_mode 004E                   _repeat 068B                ??_sendCmd 0073  
              ??_process 007A  __end_of__initialization 0651           __pcstackCOMMON 0070  
           __pidataBANK0 0000        process@encLastKey 0021            __end_of_space 068B  
          __end_of_setup 065E    __end_of_alpine_packet 0033                  ??_space 0070  
                ??_setup 0070              sendCmd@nbit 0079               __pmaintext 0724  
     __size_of_repeatCmd 000D                  ?_repeat 0070               __stringtab 0001  
             _keyPressed 06E1          __size_of_repeat 0019              space@ntimes 0071  
   __end_of_key_pull_bit 0057                  _sendCmd 06A4     __end_of_key_push_bit 0060  
                _process 076C     end_of_initialization 0651        __end_of_repeatCmd 0676  
keyPressed@key_pull_mask 0071              ?_keyPressed 0070  keyPressed@key_push_mask 0074  
         __end_of_repeat 06A4               mark@ntimes 0072      start_initialization 064C  
            __pdataBANK0 0020                 ??_repeat 0073             sendCmd@nbyte 0078  
          __pcstackBANK0 0022      __size_of_keyPressed 0043            keyPressed@key 0073  
             sendCmd@cmd 0077             _key_pull_bit 004E             _key_push_bit 0057  
              __ptext230 06E1                __ptext231 068B                __ptext232 0669  
              __ptext233 065E                __ptext234 0676                __ptext235 0653  
              __ptext236 0000                __ptext228 076C                __ptext229 06A4  
              __pstrings 0001                __pswtext1 0060                 ?_sendCmd 0070  
               ?_process 0070           __size_of_space 0015           __size_of_setup 000B  
              _repeatCmd 0669              __stringbase 0006               process@key 007C  
          _alpine_packet 0007               ?_repeatCmd 0070             ??_keyPressed 0070  
     __end_of__stringtab 0007         __size_of_sendCmd 003D       __end_of_keyPressed 0724  
              repeat@key 0075         __size_of_process 0094                 _key_cmd1 0033  
               _key_cmd2 003C                 _key_mode 0045            __size_of_main 0048  
          __size_of_mark 000B              ??_repeatCmd 0073                stringcode 0001  
               stringdir 0001                 stringtab 0001  
